@page "/projects"
@using Blazor_Portfolio_Website.Models
@using Blazor_Portfolio_Website.Services
@inject ProjectService ProjectService
@inject IJSRuntime JS

<h3 class="projects-title">My Portfolio Projects</h3>

<div class="row">
    @if (projects == null || !projects.Any())
    {
        <p><em>Loading projects...</em></p>
    }
    else
    {
        @foreach (var project in projects)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@project.Name</h5>
                        <p class="card-text">@project.Description</p>

                        @if (project.Technologies.Any())
                        {
                            <p class="card-text">
                                <small class="text-muted">Technologies: @string.Join(", ", project.Technologies)</small>
                            </p>
                        }              

                        @if (!string.IsNullOrEmpty(project.EmbedUrl))
                        {
                            <div class="ratio ratio-4x3 mb-2">
                                <iframe src="@project.EmbedUrl"
                                        width="100%" height="100%" style="border:none;" allowfullscreen>
                                </iframe>
                            </div>
                        }
                        @if (project.EmbedNotes.Any() && !string.IsNullOrEmpty(project.EmbedUrl))
                        {
                            <p class="card-text">
                                @((MarkupString)@project.EmbedNotes)
                            </p>
                        }
                        else if (!string.IsNullOrEmpty(project.ProjectUrl))
                        {
                            <a href="@project.ProjectUrl" target="_blank" class="btn btn-success btn-sm me-2">View Project</a>
                        }

                        @if (!string.IsNullOrEmpty(project.GitHubUrl))
                        {
                            <a href="@project.GitHubUrl" target="_blank" class="btn btn-primary btn-sm me-2">GitHub</a>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<Project> projects;

    protected override void OnInitialized()
    {
        projects = ProjectService.GetProjects();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("destroyBugSpawning");
        }
    }
}